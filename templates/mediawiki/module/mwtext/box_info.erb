<% if CodeObjects::ClassObject === object && object.superclass %>
Inherits: <%= mw_linkify object.superclass %><% if object.superclass.name != :BasicObject %><%= mw_linkify P(:Object) %><% object.inheritance_tree.reverse.each_with_index do |obj, i| %><%= obj == object ? obj.path : mw_linkify(obj) %><% end
  end
end
[[:class, "Extended by"], [:instance, "Includes"]].each do |scope, name|
  if (mix = run_verifier(object.mixins(scope))).size > 0 %><%= name %>: <%= mix.sort_by {|o| o.path }.map {|o| mw_linkify(o) }.join(", ") %><% end
end
if (mixed_into = mixed_into(object)).size > 0 %>Included in: <%= mixed_into.sort_by {|o| o.path }.map {|o| linkify(o) }.join(", ") %><% end
unless object.root? %><%= erb(:defines) %><% end %>